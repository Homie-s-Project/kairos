version: '3.7'

services:
  kairos-db:
    image: postgres:latest
    container_name: kairos-db
    restart: always
    ports:
      - "5432:5432"
    expose:
      - 5432
    environment:
      - POSTGRES_DB=kairos
      - POSTGRES_USER=kairos_user
      - POSTGRES_PASSWORD=kairos_password
    volumes:
      - pgdata:/var/lib/postgresql/data
      - pgconf:/etc/postgresql
      - pglog:/var/log/postgresql
      - ./kairos-db/sql:/docker-entrypoint-initdb.d/


  karios-pgadmin:
    image: dpage/pgadmin4
    container_name: kairos-pgadmin4
    restart: always
    depends_on:
      - kairos-db
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: user@kairos.com
      PGADMIN_DEFAULT_PASSWORD: kairos
    volumes:
      - pgadmin-data:/var/lib/pgadmin
      - ./kairos-db/servers.json:/pgadmin4/servers.json
      - ./kairos-db/pgpass:/pgpass

  kairos-api:
    image: kairos-api:dev
    container_name: kairos-api
    restart: unless-stopped
    depends_on:
      - kairos-db
    build:
      context: kairos-api
      dockerfile: ./Dockerfile
    ports:
      - 5000:5000
    environment:
      - DOTNET_WATCH_RESTART_ON_RUDE_EDIT=1
      - DOTNET_WATCH_SUPPRESS_EMOJIS=1  
      - ASPNETCORE_ENVIRONMENT=Development
    volumes:
      - ./kairos-api:/app
    command: dotnet watch run --project Kairos.API
    networks:
      - kairos-network
      
  kairos-web:
    image: kairos-web:dev
    container_name: kairos-web
    restart: unless-stopped
    depends_on:
      - kairos-api
    build:
      context: kairos-web
      dockerfile: ./Dockerfile
    environment:
      NODE_ENV: development
    volumes:
      - ./kairos-web:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 4200:4200
      - 49153:49153
    networks:
      - kairos-network

  kairos-reverse-proxy:
    container_name: kairos-reverse-proxy
    restart: unless-stopped
    build: 
      context: kairos-reverse-proxy
      dockerfile: ./Dockerfile
    volumes:
      - ./kairos-reverse-proxy/nginx.conf:/etc/nginx/conf.d/nginx.conf
    depends_on:
      - kairos-web
      - kairos-api
    ports:
      - 80:80
    networks:
      - kairos-network

volumes:
  pgdata:
  pgconf:
  pglog:
  pgadmin-data:

networks:
  kairos-network: